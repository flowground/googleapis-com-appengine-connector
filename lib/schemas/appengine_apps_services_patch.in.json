{
    "type": "object",
    "properties": {
        "appsId": {
            "required": true,
            "type": "string"
        },
        "migrateTraffic": {
            "type": "boolean"
        },
        "servicesId": {
            "required": true,
            "type": "string"
        },
        "updateMask": {
            "type": "string"
        },
        "fields": {
            "type": "string"
        },
        "key": {
            "type": "string"
        },
        "oauth_token": {
            "type": "string"
        },
        "prettyPrint": {
            "type": "boolean",
            "default": true
        },
        "quotaUser": {
            "type": "string"
        },
        "uploadType": {
            "type": "string"
        },
        "upload_protocol": {
            "type": "string"
        },
        "requestBody": {
            "description": "A Service resource is a logical component of an application that can share state and communicate in a secure fashion with other services. For example, an application that handles customer requests might include separate services to handle tasks such as backend data analysis or API requests from mobile devices. Each service has a collection of versions that define a specific set of code used to implement the functionality of that service.",
            "properties": {
                "id": {
                    "description": "Relative name of the service within the application. Example: default.@OutputOnly",
                    "type": "string"
                },
                "name": {
                    "description": "Full path to the Service resource in the API. Example: apps/myapp/services/default.@OutputOnly",
                    "type": "string"
                },
                "split": {
                    "description": "Mapping that defines fractional HTTP traffic diversion to different versions within the service.",
                    "properties": {
                        "allocations": {
                            "additionalProperties": {
                                "format": "double",
                                "type": "number"
                            },
                            "description": "Mapping from version IDs within the service to fractional (0.000, 1] allocations of traffic for that version. Each version can be specified only once, but some versions in the service may not have any traffic allocation. Services that have traffic allocated cannot be deleted until either the service is deleted or their traffic allocation is removed. Allocations must sum to 1. Up to two decimal place precision is supported for IP-based splits and up to three decimal places is supported for cookie-based splits.",
                            "type": "object"
                        },
                        "shardBy": {
                            "description": "Mechanism used to determine which version a request is sent to. The traffic selection algorithm will be stable for either type until allocations are changed.",
                            "enum": [
                                "UNSPECIFIED",
                                "COOKIE",
                                "IP",
                                "RANDOM"
                            ],
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object"
        }
    }
}